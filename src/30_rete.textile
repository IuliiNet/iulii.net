h3. la rete del progetto IuliiNet

Questa sezione si prefigge l'obiettivo di descrivere la struttura della rete del progetto *IuliiNet* e delle "reti mesh":http://it.wikipedia.org/wiki/Wireless_mesh_network.

Documentazione esaustiva sulle reti comunitarie è disponibile alla pagina "links#materialeinformativo":/links.html#materialeinformativo.

La rete del progetto *IuliiNet* non è comunque una vera e propria rete mesh, in quanto molti degli apparati utilizzati (come le radio ubiquiti) non supportano il protocollo batman-adv e la modalità adhoc. Si è scelto di utilizzare i firmware originali ubiquiti al fine di salvaguardare la qualità dei singoli collegamenti radio e quindi delle performance.

h4. nodi

I nodi, cioè ciascuna postatione segnalata su "map.ninux.org":http://map.ninnux.org consisite tipicamente in un access point a terra al quale sono collegati via ethernet  gli apparati Ubiquiti che creano i ponti radio.

In alcuni casi gli access point a terra sono collegati via wireless in modalità adhoc ad altri apparati posti delle vicinanze.

Alcuni router a terra mantengono una connessione "vpn con le altre isole":http://wiki.ninux.org/IsoleVPN della rete ninux. 

Una suddivisione dei tipi di nodi che è possibile installare e configurare è la seguente:

* *foglia* nodo normalmente connesso direttamente ad un solo altro nodo di tipo foglia, o più comunemente ad un nodo di backbone.
* *backbone* questo genere di nodi è fondamentale per l'infrastruttura della rete in quanto mette in comunicazione diretta, oltre che diversi nodi foglia, almeno un altro nodo backbone; questo tipo di nodi è fondamentale per il collegamento di segmenti della rete.

h4. clients

Sono i dispositivi personali (pc, notebook, smartphone, tablet, router, ...), per questi gli accessi possibili per entrare nella rete del progetto iulii.net sono:

* *wireless*, essid: *www.iulii.net* in modalità ap;
* *ethernet*, collegamento via cavo;
* *vpn*, connessione via "tunnel vpn":http://wiki.ninux.org/IsoleVPN.

h4. software

Il firmware linux di riferimento per gli apparati che gestiscono il routing è la distribuzione linux "openwrt":https://openwrt.org/. Le radio che tengono in piedi i collegamenti possono avere anche firmware propietari (AirOS, RouterOS, ecc), l'unica condizione è che possano gestire le vlan tag.

h5. routing ed indirizzi ip

Il *routing della rete* è affidato a "batman-adv":http://www.open-mesh.org/wiki/batman-adv/.

Batman-adv è un protocollo di routing per reti mesh, ottimizzato per l'utilizzo su reti wireless. Il tipico scenario in cui questo protocollo viene utilizzato è una rete wireless adhoc multi-hop. Non è comunque lo stretto utilizzo della rete *IuliiNet*.

È un protocollo su layer2, cioè instaura comunicazione con gli altri nodi della rete senza utilizzare i comuni indirizzi ip (che sono sul layer3).

Quello che sarà necessario indicare a batman-adv sono i device (porte ethernet, vlan) da utilizzare per la mesh e se il nodo in questione deve funzionare da nodo gateway (o meglio dispone di un server dhcp per la gestione degli ipv4) o da nodo clients. Fatto questo, batman-adv creerà una nuova interfaccia (nel caso bat0) sulla quale si potrà lavorare sul layer3.

Grazie a tutte le bat0 di ciascun nodo viene quindi a crearsi una struttura simile ad "un grande switch". Quindi ad ogni bat0 (o al bridge al quale appartiene) sarà possibile assegnare i suoi ip. Quindi ogni device batman-adv riuscirà a vedere, attraverso i suoi vicini, tutti gli altri nodi della rete.

Un primo aspetto molto interessante di questo approccio alla rete (che tra l'altro forniscono anche altri protocolli di routing come oslr, ed è quindi una caratteristica intrinseca delle reti mesh) è la creazione di una struttura a maglia, nella quale ogni nodo riesce a comunicare direttamente (single-hop) con un alto numero di nodi vicini. Si capisce che in questo modo, la caduta di un singolo nodo non pregiudica il collegamento di altri nodi, che infatti saranno in grado di trovare la strada per le loro comunicazioni attraverso gli altri vicini attivi.

In maniera complementare, l'aggiunta di un altro nodo alla rete mesh sarà automaticamente riconosciuta da tutti i suoi vicini, e quindi da tutti i nodi della rete mesh, contribuendo in questo modo alla sua crescita.

La *gestione degli indirizzi ip* dei nodi e dei client è affidata sia ad ipv4 che ad ipv6.

Tipicamente almeno un nodo della rete mette a disposizione di tutti i devices una classe /64 di indirizzi ipv6 (sul sito "tunnelbroker.net":http://tunnelbroker.net/ è possibile ottenere una classe /64 ipv6 gratuitamente).

Gli indirizzi ipv6 ai nodi vengono assegnati staticamente e vengono generati a partire dal prefisso della /64 e dal mac address di un'interfaccia.

Comunemente, utilizzando un router advertisements daemon (es. radvd, dnsmasq), ogni clients della rete acquisisce l'indirizzo ipv6 in maniera automatica dal nodo che rende disponibile questo servizio. Molti software di gestione degli indirizzi ip (es. "NetworkManager":http://projects.gnome.org/NetworkManager/) su linux supportano queste funzionalità.
